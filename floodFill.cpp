
//Test Program for Grid class
//  Autogenerated by Class Wizard, by Stephen Wetzel, on April 19, 2014

#include "Grid.h" //
#include <iostream> //Basic input output (cout)
#include <string> //strings
#include <fstream> //file output
#include <sstream> //used to convert streams to strings
#include <ostream> //output streams
#include <vector> //vectors
#include <ctime> //time stamps

#include <chrono>
#include <thread>
using namespace std;


void floodFill(Grid &g, int x, int y, int fillType = 2)
{
	cout << g;
	cout << "\n("<<x<<", "<<y<<")";
	
	//boundaries:
	if (x > g.getColumns() || x < 0) return;
	if (y > g.getRows() || y < 0) return;
	
	//std::this_thread::sleep_for(std::chrono::milliseconds(100));
	if (g[y][x])
	{//already filled in
		return;
	}
	else
	{//fill it in
		g[y][x] = fillType;
		floodFill(g, x  , y+1, fillType);
		floodFill(g, x+1, y  , fillType);
		floodFill(g, x  , y-1, fillType);
		floodFill(g, x-1, y  , fillType);
	}
	return;
}


int main(int argc, char *argv[])
{
	int gridSize = 5;
	
	vector< vector<int> > matrix = 
	{{0,0,0,0,0},{0,1,1,1,0},{0,1,0,1,0},{0,1,1,1,0},{0,0,0,0,0}};
	
	Grid testGrid(gridSize, gridSize, matrix);
	
	Grid fileGrid("sample.txt");
	
	cout << fileGrid;
	//(9,2) is filled
	//floodFill(fileGrid, 9, 2);
	//floodFill(fileGrid, 16, 10);
	//floodFill(fileGrid, 20, 20);
	int fillColumn;
	int fillRow;
	
	if (argc < 3)
	{//starting point was not passed, get it from user
		cout<<"\nEnter fill starting point: ";
		cin >> fillColumn >> fillRow;
	}
	else if (argc >= 3)
	{//starting point was passed in from command line
		istringstream ss1(argv[1]);
		ss1 >> fillColumn;
		
		istringstream ss2(argv[2]);
		ss2 >> fillRow;
	}
	
	floodFill(fileGrid, fillColumn, fillRow);
	
	cout << fileGrid;
	
  cout<<"\n\n"; //clean up output
  return 0;
}
